// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: portservice/internal/proto-files/service/port-service.proto

package service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	domain "portservice/internal/grpc/domain"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type InsertAirportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddedAirport *domain.Airport `protobuf:"bytes,1,opt,name=addedAirport,proto3" json:"addedAirport,omitempty"`
	Error        *Error          `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *InsertAirportResponse) Reset() {
	*x = InsertAirportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portservice_internal_proto_files_service_port_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertAirportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertAirportResponse) ProtoMessage() {}

func (x *InsertAirportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portservice_internal_proto_files_service_port_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertAirportResponse.ProtoReflect.Descriptor instead.
func (*InsertAirportResponse) Descriptor() ([]byte, []int) {
	return file_portservice_internal_proto_files_service_port_service_proto_rawDescGZIP(), []int{0}
}

func (x *InsertAirportResponse) GetAddedAirport() *domain.Airport {
	if x != nil {
		return x.AddedAirport
	}
	return nil
}

func (x *InsertAirportResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type BulkInsertAirportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddedAmount int32  `protobuf:"varint,1,opt,name=addedAmount,proto3" json:"addedAmount,omitempty"`
	Error       *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BulkInsertAirportResponse) Reset() {
	*x = BulkInsertAirportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portservice_internal_proto_files_service_port_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkInsertAirportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkInsertAirportResponse) ProtoMessage() {}

func (x *BulkInsertAirportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_portservice_internal_proto_files_service_port_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkInsertAirportResponse.ProtoReflect.Descriptor instead.
func (*BulkInsertAirportResponse) Descriptor() ([]byte, []int) {
	return file_portservice_internal_proto_files_service_port_service_proto_rawDescGZIP(), []int{1}
}

func (x *BulkInsertAirportResponse) GetAddedAmount() int32 {
	if x != nil {
		return x.AddedAmount
	}
	return 0
}

func (x *BulkInsertAirportResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_portservice_internal_proto_files_service_port_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_portservice_internal_proto_files_service_port_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_portservice_internal_proto_files_service_port_service_proto_rawDescGZIP(), []int{2}
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_portservice_internal_proto_files_service_port_service_proto protoreflect.FileDescriptor

var file_portservice_internal_proto_files_service_port_service_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x32, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x15, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x65, 0x64, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x65,
	0x64, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x63,
	0x0a, 0x19, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x64, 0x64, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x61, 0x64, 0x64, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xcc, 0x01, 0x0a, 0x11, 0x50,
	0x6f, 0x72, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x39, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x0f, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x69, 0x72, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x42,
	0x75, 0x6c, 0x6b, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0x22, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x41, 0x69, 0x72, 0x70, 0x6f,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0f, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x42, 0x23, 0x5a, 0x21, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_portservice_internal_proto_files_service_port_service_proto_rawDescOnce sync.Once
	file_portservice_internal_proto_files_service_port_service_proto_rawDescData = file_portservice_internal_proto_files_service_port_service_proto_rawDesc
)

func file_portservice_internal_proto_files_service_port_service_proto_rawDescGZIP() []byte {
	file_portservice_internal_proto_files_service_port_service_proto_rawDescOnce.Do(func() {
		file_portservice_internal_proto_files_service_port_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_portservice_internal_proto_files_service_port_service_proto_rawDescData)
	})
	return file_portservice_internal_proto_files_service_port_service_proto_rawDescData
}

var file_portservice_internal_proto_files_service_port_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_portservice_internal_proto_files_service_port_service_proto_goTypes = []interface{}{
	(*InsertAirportResponse)(nil),     // 0: service.InsertAirportResponse
	(*BulkInsertAirportResponse)(nil), // 1: service.BulkInsertAirportResponse
	(*Error)(nil),                     // 2: service.Error
	(*domain.Airport)(nil),            // 3: domain.Airport
	(*domain.Airports)(nil),           // 4: domain.Airports
}
var file_portservice_internal_proto_files_service_port_service_proto_depIdxs = []int32{
	3, // 0: service.InsertAirportResponse.addedAirport:type_name -> domain.Airport
	2, // 1: service.InsertAirportResponse.error:type_name -> service.Error
	2, // 2: service.BulkInsertAirportResponse.error:type_name -> service.Error
	3, // 3: service.PortDomainService.Insert:input_type -> domain.Airport
	4, // 4: service.PortDomainService.BulkInsert:input_type -> domain.Airports
	3, // 5: service.PortDomainService.SearchByAirportName:input_type -> domain.Airport
	0, // 6: service.PortDomainService.Insert:output_type -> service.InsertAirportResponse
	1, // 7: service.PortDomainService.BulkInsert:output_type -> service.BulkInsertAirportResponse
	4, // 8: service.PortDomainService.SearchByAirportName:output_type -> domain.Airports
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_portservice_internal_proto_files_service_port_service_proto_init() }
func file_portservice_internal_proto_files_service_port_service_proto_init() {
	if File_portservice_internal_proto_files_service_port_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_portservice_internal_proto_files_service_port_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertAirportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portservice_internal_proto_files_service_port_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkInsertAirportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_portservice_internal_proto_files_service_port_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_portservice_internal_proto_files_service_port_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_portservice_internal_proto_files_service_port_service_proto_goTypes,
		DependencyIndexes: file_portservice_internal_proto_files_service_port_service_proto_depIdxs,
		MessageInfos:      file_portservice_internal_proto_files_service_port_service_proto_msgTypes,
	}.Build()
	File_portservice_internal_proto_files_service_port_service_proto = out.File
	file_portservice_internal_proto_files_service_port_service_proto_rawDesc = nil
	file_portservice_internal_proto_files_service_port_service_proto_goTypes = nil
	file_portservice_internal_proto_files_service_port_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PortDomainServiceClient is the client API for PortDomainService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortDomainServiceClient interface {
	Insert(ctx context.Context, in *domain.Airport, opts ...grpc.CallOption) (*InsertAirportResponse, error)
	BulkInsert(ctx context.Context, in *domain.Airports, opts ...grpc.CallOption) (*BulkInsertAirportResponse, error)
	SearchByAirportName(ctx context.Context, in *domain.Airport, opts ...grpc.CallOption) (*domain.Airports, error)
}

type portDomainServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPortDomainServiceClient(cc grpc.ClientConnInterface) PortDomainServiceClient {
	return &portDomainServiceClient{cc}
}

func (c *portDomainServiceClient) Insert(ctx context.Context, in *domain.Airport, opts ...grpc.CallOption) (*InsertAirportResponse, error) {
	out := new(InsertAirportResponse)
	err := c.cc.Invoke(ctx, "/service.PortDomainService/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portDomainServiceClient) BulkInsert(ctx context.Context, in *domain.Airports, opts ...grpc.CallOption) (*BulkInsertAirportResponse, error) {
	out := new(BulkInsertAirportResponse)
	err := c.cc.Invoke(ctx, "/service.PortDomainService/BulkInsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portDomainServiceClient) SearchByAirportName(ctx context.Context, in *domain.Airport, opts ...grpc.CallOption) (*domain.Airports, error) {
	out := new(domain.Airports)
	err := c.cc.Invoke(ctx, "/service.PortDomainService/SearchByAirportName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PortDomainServiceServer is the server API for PortDomainService service.
type PortDomainServiceServer interface {
	Insert(context.Context, *domain.Airport) (*InsertAirportResponse, error)
	BulkInsert(context.Context, *domain.Airports) (*BulkInsertAirportResponse, error)
	SearchByAirportName(context.Context, *domain.Airport) (*domain.Airports, error)
}

// UnimplementedPortDomainServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPortDomainServiceServer struct {
}

func (*UnimplementedPortDomainServiceServer) Insert(context.Context, *domain.Airport) (*InsertAirportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Insert not implemented")
}
func (*UnimplementedPortDomainServiceServer) BulkInsert(context.Context, *domain.Airports) (*BulkInsertAirportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkInsert not implemented")
}
func (*UnimplementedPortDomainServiceServer) SearchByAirportName(context.Context, *domain.Airport) (*domain.Airports, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchByAirportName not implemented")
}

func RegisterPortDomainServiceServer(s *grpc.Server, srv PortDomainServiceServer) {
	s.RegisterService(&_PortDomainService_serviceDesc, srv)
}

func _PortDomainService_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.Airport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServiceServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.PortDomainService/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServiceServer).Insert(ctx, req.(*domain.Airport))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortDomainService_BulkInsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.Airports)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServiceServer).BulkInsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.PortDomainService/BulkInsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServiceServer).BulkInsert(ctx, req.(*domain.Airports))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortDomainService_SearchByAirportName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(domain.Airport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServiceServer).SearchByAirportName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.PortDomainService/SearchByAirportName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServiceServer).SearchByAirportName(ctx, req.(*domain.Airport))
	}
	return interceptor(ctx, in, info, handler)
}

var _PortDomainService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.PortDomainService",
	HandlerType: (*PortDomainServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Insert",
			Handler:    _PortDomainService_Insert_Handler,
		},
		{
			MethodName: "BulkInsert",
			Handler:    _PortDomainService_BulkInsert_Handler,
		},
		{
			MethodName: "SearchByAirportName",
			Handler:    _PortDomainService_SearchByAirportName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "portservice/internal/proto-files/service/port-service.proto",
}
